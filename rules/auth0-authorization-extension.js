/*
*  This rule been automatically generated by auth0-authz-extension
*  Updated by julian.lywood.mulcock@auth0.com, 2018-08-24T15:36:53.402Z
 */
function (user, context, callback) {
  var _ = require('lodash');
  var EXTENSION_URL = "https://jwlm.eu8.webtask.io/adf6e2f2b84784b57522e3b19dfc9201";

  var audience = '';
  audience = audience || (context.request && context.request.query && context.request.query.audience);
  if (audience === 'urn:auth0-authz-api') {
    return callback(new UnauthorizedError('no_end_users'));
  }

  audience = audience || (context.request && context.request.body && context.request.body.audience);
  if (audience === 'urn:auth0-authz-api') {
    return callback(new UnauthorizedError('no_end_users'));
  }

  getPolicy(user, context, function(err, res, data) {
    if (err) {
      console.log('Error from Authorization Extension:', err);
      return callback(new UnauthorizedError('Authorization Extension: ' + err.message));
    }

    if (res.statusCode !== 200) {
      console.log('Error from Authorization Extension:', res.body || res.statusCode);
      return callback(
        new UnauthorizedError('Authorization Extension: ' + ((res.body && (res.body.message || res.body) || res.statusCode)))
      );
    }

    if(context.connection === 'jwlm-saml-idp'){
        user.groups = ['London School of Economics'];
        user.roles = ['Federated User'];
        user.permissions = ['read:content'];

        context.idToken['https://access/groups'] = user.groups;
        context.idToken['https://access/roles'] = user.roles;
        context.idToken['https://access/permissions'] = user.permissions;

       }

    else {
    // Update the user object.
    user.groups = data.groups;
    user.roles = data.roles;
    user.permissions = data.permissions;

    context.idToken['https://access/groups'] = user.groups;
    context.idToken['https://access/roles'] = user.roles;
    context.idToken['https://access/permissions'] = user.permissions;
       }

    return callback(null, user, context);
  });

  // Get the policy for the user.
  function getPolicy(user, context, cb) {
    request.post({
      url: EXTENSION_URL + "/api/users/" + user.user_id + "/policy/" + context.clientID,
      headers: {
        "x-api-key": "bdff77418b85c5e9066c69574e605c56c0b3f3821b194c5630a6584ec15ef13b"
      },
      json: {
        connectionName: context.connection || user.identities[0].connection,
        groups: user.groups
      },
      timeout: 5000
    }, cb);
  }
}
